;; The first three lines of this file were inserted by DrRacket. They record metadata
;; about the language level of this file in a form that our tools can easily process.
#reader(lib "htdp-beginner-reader.ss" "lang")((modname 1-4-7-refactored) (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constructor repeating-decimal #f #t none #f () #f)))


; A current state falls into one of three categories 
; "green"
; "yellow"
; "red"
; interpretation the colors of a traffic light 

; TrafficLight -> TrafficLight
; yields the next state, given current state cs
(define (tl-next cs)
  (cond [(string=? cs "green") "yellow"]
        [(string=? cs "yellow") "red"]
        [else "green"]))


 (require 2htdp/image)
; TrafficLight -> Image
; renders the current state cs as an image
(define (tl-render current-state)
  (place-image (3-lights current-state) 45 15 (empty-scene 90 30)))

(define (green-light cs)
  (if (string=? cs "green") (circle 15 "solid" "green")
      (circle 15 "outline" "green")))

(define (yellow-light cs)
  (if (string=? cs "yellow") (circle 15 "solid" "yellow")
      (circle 15 "outline" "yellow")))

(define (red-light cs)
  (if (string=? cs "red") (circle 15 "solid" "red")
      (circle 15 "outline" "red")))

(define (3-lights cs)
  (beside (green-light cs)
          (yellow-light cs)
          (red-light cs)))


 (require 2htdp/universe)
; TrafficLight -> TrafficLight
; simulates a clock-based American traffic light
(define (traffic-light-simulation initial-state)
  (big-bang initial-state
    [to-draw tl-render]
    [on-tick tl-next 1]))

(traffic-light-simulation "green")